#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>



#define SERVOMIN  150 // this is the 'minimum' pulse length count (out of 4096)
#define SERVOMAX  600 // this is the 'maximum' pulse length count (out of 4096)


class Sweeper {
	Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver(); // the servo

	int srvn ;
	int pos; // current servo position
	int increment; // increment to move for each interval
	int updateInterval; // interval between updates
	unsigned long lastUpdate; // last update of position

	public:
	Sweeper(int servo,int interval) {
		updateInterval = interval;
		increment = 1;
		srvn = servo
	}

	void Attach(){
		//servo.attach(pin);
		pwm.begin();

		pwm.setPWMFreq(60);  // Analog servos run at ~60 Hz updates
	}
	void Detach() {
		//servo.detach();
	}

	void moveServo(int servo, int angle)
	{
	    int pulselength = map(angle, 0, 180, SERVOMIN, SERVOMAX);
	    pwm.setPWM(servo, 0, pulselength);
	}


	void Update() {
	if((millis() - lastUpdate) > updateInterval){ // time to update

		lastUpdate = millis();
		pos += increment;
		moveServo(srvn,pos);
		Serial.println(pos);

		if ((pos >= 180) || (pos <= 0)){ // end of sweep
			// reverse direction
			increment = -increment;
			}
		}
	}
};


Sweeper sweeper1(0, 1000);




void setup() {
  sweeper1.Attach();
}

void loop(){
	sweeper1.Update();
//
//	for (int ang = 0; ang <= 180; ang++){
//		for (int srv = 0; srv < 5; srv++){
//			moveServo(srv,ang);
//			//moveServo(4,ang);
//			delay(10);
//		}
//	}
//	for (int ang = 180; ang > 0; ang--){
//		for (int srv = 0; srv < 5; srv++){
//			moveServo(srv,ang);
//			//moveServo(4,ang);
//			delay(10);
//		}
//	}
}
